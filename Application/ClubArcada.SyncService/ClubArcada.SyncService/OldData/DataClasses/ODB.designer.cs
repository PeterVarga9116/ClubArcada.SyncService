#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClubArcada.SyncService.OldData.DataClasses
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PokerSystem")]
	public partial class ODBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccounting(Accounting instance);
    partial void UpdateAccounting(Accounting instance);
    partial void DeleteAccounting(Accounting instance);
    partial void InsertWage(Wage instance);
    partial void UpdateWage(Wage instance);
    partial void DeleteWage(Wage instance);
    partial void InsertAuditHistory(AuditHistory instance);
    partial void UpdateAuditHistory(AuditHistory instance);
    partial void DeleteAuditHistory(AuditHistory instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertCashIn(CashIn instance);
    partial void UpdateCashIn(CashIn instance);
    partial void DeleteCashIn(CashIn instance);
    partial void InsertCashResult(CashResult instance);
    partial void UpdateCashResult(CashResult instance);
    partial void DeleteCashResult(CashResult instance);
    partial void InsertCashState(CashState instance);
    partial void UpdateCashState(CashState instance);
    partial void DeleteCashState(CashState instance);
    partial void InsertCashTable(CashTable instance);
    partial void UpdateCashTable(CashTable instance);
    partial void DeleteCashTable(CashTable instance);
    partial void InsertGallery(Gallery instance);
    partial void UpdateGallery(Gallery instance);
    partial void DeleteGallery(Gallery instance);
    partial void InsertLeague(League instance);
    partial void UpdateLeague(League instance);
    partial void DeleteLeague(League instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertNew(New instance);
    partial void UpdateNew(New instance);
    partial void DeleteNew(New instance);
    partial void InsertPersonal(Personal instance);
    partial void UpdatePersonal(Personal instance);
    partial void DeletePersonal(Personal instance);
    partial void InsertPhoto(Photo instance);
    partial void UpdatePhoto(Photo instance);
    partial void DeletePhoto(Photo instance);
    partial void InsertRequest(Request instance);
    partial void UpdateRequest(Request instance);
    partial void DeleteRequest(Request instance);
    partial void InsertScreenshot(Screenshot instance);
    partial void UpdateScreenshot(Screenshot instance);
    partial void DeleteScreenshot(Screenshot instance);
    partial void InsertStructureDetail(StructureDetail instance);
    partial void UpdateStructureDetail(StructureDetail instance);
    partial void DeleteStructureDetail(StructureDetail instance);
    partial void InsertStructure(Structure instance);
    partial void UpdateStructure(Structure instance);
    partial void DeleteStructure(Structure instance);
    partial void InsertTip(Tip instance);
    partial void UpdateTip(Tip instance);
    partial void DeleteTip(Tip instance);
    partial void InsertTournamentCashout(TournamentCashout instance);
    partial void UpdateTournamentCashout(TournamentCashout instance);
    partial void DeleteTournamentCashout(TournamentCashout instance);
    partial void InsertTournamentDetail(TournamentDetail instance);
    partial void UpdateTournamentDetail(TournamentDetail instance);
    partial void DeleteTournamentDetail(TournamentDetail instance);
    partial void InsertTournamentResult(TournamentResult instance);
    partial void UpdateTournamentResult(TournamentResult instance);
    partial void DeleteTournamentResult(TournamentResult instance);
    partial void InsertTournament(Tournament instance);
    partial void UpdateTournament(Tournament instance);
    partial void DeleteTournament(Tournament instance);
    partial void InsertTournamentStat(TournamentStat instance);
    partial void UpdateTournamentStat(TournamentStat instance);
    partial void DeleteTournamentStat(TournamentStat instance);
    partial void InsertTournamentTemplate(TournamentTemplate instance);
    partial void UpdateTournamentTemplate(TournamentTemplate instance);
    partial void DeleteTournamentTemplate(TournamentTemplate instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserSetting(UserSetting instance);
    partial void UpdateUserSetting(UserSetting instance);
    partial void DeleteUserSetting(UserSetting instance);
    #endregion
		
		public ODBDataContext() : 
				base(global::ClubArcada.SyncService.Properties.Settings.Default.PokerSystemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ODBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ODBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ODBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ODBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Accounting> Accountings
		{
			get
			{
				return this.GetTable<Accounting>();
			}
		}
		
		public System.Data.Linq.Table<Wage> Wages
		{
			get
			{
				return this.GetTable<Wage>();
			}
		}
		
		public System.Data.Linq.Table<AuditHistory> AuditHistories
		{
			get
			{
				return this.GetTable<AuditHistory>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<CashIn> CashIns
		{
			get
			{
				return this.GetTable<CashIn>();
			}
		}
		
		public System.Data.Linq.Table<CashResult> CashResults
		{
			get
			{
				return this.GetTable<CashResult>();
			}
		}
		
		public System.Data.Linq.Table<CashState> CashStates
		{
			get
			{
				return this.GetTable<CashState>();
			}
		}
		
		public System.Data.Linq.Table<CashTable> CashTables
		{
			get
			{
				return this.GetTable<CashTable>();
			}
		}
		
		public System.Data.Linq.Table<Gallery> Galleries
		{
			get
			{
				return this.GetTable<Gallery>();
			}
		}
		
		public System.Data.Linq.Table<League> Leagues
		{
			get
			{
				return this.GetTable<League>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
		
		public System.Data.Linq.Table<Personal> Personals
		{
			get
			{
				return this.GetTable<Personal>();
			}
		}
		
		public System.Data.Linq.Table<Photo> Photos
		{
			get
			{
				return this.GetTable<Photo>();
			}
		}
		
		public System.Data.Linq.Table<Request> Requests
		{
			get
			{
				return this.GetTable<Request>();
			}
		}
		
		public System.Data.Linq.Table<Screenshot> Screenshots
		{
			get
			{
				return this.GetTable<Screenshot>();
			}
		}
		
		public System.Data.Linq.Table<StructureDetail> StructureDetails
		{
			get
			{
				return this.GetTable<StructureDetail>();
			}
		}
		
		public System.Data.Linq.Table<Structure> Structures
		{
			get
			{
				return this.GetTable<Structure>();
			}
		}
		
		public System.Data.Linq.Table<Tip> Tips
		{
			get
			{
				return this.GetTable<Tip>();
			}
		}
		
		public System.Data.Linq.Table<TournamentCashout> TournamentCashouts
		{
			get
			{
				return this.GetTable<TournamentCashout>();
			}
		}
		
		public System.Data.Linq.Table<TournamentDetail> TournamentDetails
		{
			get
			{
				return this.GetTable<TournamentDetail>();
			}
		}
		
		public System.Data.Linq.Table<TournamentResult> TournamentResults
		{
			get
			{
				return this.GetTable<TournamentResult>();
			}
		}
		
		public System.Data.Linq.Table<Tournament> Tournaments
		{
			get
			{
				return this.GetTable<Tournament>();
			}
		}
		
		public System.Data.Linq.Table<TournamentStat> TournamentStats
		{
			get
			{
				return this.GetTable<TournamentStat>();
			}
		}
		
		public System.Data.Linq.Table<TournamentTemplate> TournamentTemplates
		{
			get
			{
				return this.GetTable<TournamentTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserSetting> UserSettings
		{
			get
			{
				return this.GetTable<UserSetting>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accountings")]
	public partial class Accounting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AccountingId;
		
		private System.Guid _UserId;
		
		private bool _IsLoggedTournament;
		
		private bool _IsLoogedCash;
		
		private System.Nullable<System.DateTime> _DateLastReset;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountingIdChanging(System.Guid value);
    partial void OnAccountingIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIsLoggedTournamentChanging(bool value);
    partial void OnIsLoggedTournamentChanged();
    partial void OnIsLoogedCashChanging(bool value);
    partial void OnIsLoogedCashChanged();
    partial void OnDateLastResetChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastResetChanged();
    #endregion
		
		public Accounting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AccountingId
		{
			get
			{
				return this._AccountingId;
			}
			set
			{
				if ((this._AccountingId != value))
				{
					this.OnAccountingIdChanging(value);
					this.SendPropertyChanging();
					this._AccountingId = value;
					this.SendPropertyChanged("AccountingId");
					this.OnAccountingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoggedTournament", DbType="Bit NOT NULL")]
		public bool IsLoggedTournament
		{
			get
			{
				return this._IsLoggedTournament;
			}
			set
			{
				if ((this._IsLoggedTournament != value))
				{
					this.OnIsLoggedTournamentChanging(value);
					this.SendPropertyChanging();
					this._IsLoggedTournament = value;
					this.SendPropertyChanged("IsLoggedTournament");
					this.OnIsLoggedTournamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoogedCash", DbType="Bit NOT NULL")]
		public bool IsLoogedCash
		{
			get
			{
				return this._IsLoogedCash;
			}
			set
			{
				if ((this._IsLoogedCash != value))
				{
					this.OnIsLoogedCashChanging(value);
					this.SendPropertyChanging();
					this._IsLoogedCash = value;
					this.SendPropertyChanged("IsLoogedCash");
					this.OnIsLoogedCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastReset", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastReset
		{
			get
			{
				return this._DateLastReset;
			}
			set
			{
				if ((this._DateLastReset != value))
				{
					this.OnDateLastResetChanging(value);
					this.SendPropertyChanging();
					this._DateLastReset = value;
					this.SendPropertyChanged("DateLastReset");
					this.OnDateLastResetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wages")]
	public partial class Wage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WageId;
		
		private System.Guid _PersonId;
		
		private double _Wage1;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateFrom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWageIdChanging(System.Guid value);
    partial void OnWageIdChanged();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnWage1Changing(double value);
    partial void OnWage1Changed();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateFromChanging(System.DateTime value);
    partial void OnDateFromChanged();
    #endregion
		
		public Wage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WageId
		{
			get
			{
				return this._WageId;
			}
			set
			{
				if ((this._WageId != value))
				{
					this.OnWageIdChanging(value);
					this.SendPropertyChanging();
					this._WageId = value;
					this.SendPropertyChanged("WageId");
					this.OnWageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Wage", Storage="_Wage1", DbType="Float NOT NULL")]
		public double Wage1
		{
			get
			{
				return this._Wage1;
			}
			set
			{
				if ((this._Wage1 != value))
				{
					this.OnWage1Changing(value);
					this.SendPropertyChanging();
					this._Wage1 = value;
					this.SendPropertyChanged("Wage1");
					this.OnWage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime NOT NULL")]
		public System.DateTime DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditHistories")]
	public partial class AuditHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _UserId;
		
		private System.Guid _PaymentId;
		
		private System.DateTime _DateCreated;
		
		private string _Description;
		
		private int _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPaymentIdChanging(System.Guid value);
    partial void OnPaymentIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    #endregion
		
		public AuditHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banners")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _CreatedByUserId;
		
		private string _Description;
		
		private string _Url;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private int _SortNumber;
		
		private System.Data.Linq.Binary _Data;
		
		private string _TargetType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnCreatedByUserIdChanging(System.Guid value);
    partial void OnCreatedByUserIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnSortNumberChanging(int value);
    partial void OnSortNumberChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    partial void OnTargetTypeChanging(string value);
    partial void OnTargetTypeChanged();
    #endregion
		
		public Banner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(500)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNumber", DbType="Int NOT NULL")]
		public int SortNumber
		{
			get
			{
				return this._SortNumber;
			}
			set
			{
				if ((this._SortNumber != value))
				{
					this.OnSortNumberChanging(value);
					this.SendPropertyChanging();
					this._SortNumber = value;
					this.SendPropertyChanged("SortNumber");
					this.OnSortNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="VarChar(50)")]
		public string TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashIns")]
	public partial class CashIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CashInId;
		
		private System.Guid _CashResultId;
		
		private System.Guid _CreatedByUserId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private double _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCashInIdChanging(System.Guid value);
    partial void OnCashInIdChanged();
    partial void OnCashResultIdChanging(System.Guid value);
    partial void OnCashResultIdChanged();
    partial void OnCreatedByUserIdChanging(System.Guid value);
    partial void OnCreatedByUserIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    #endregion
		
		public CashIn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashInId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CashInId
		{
			get
			{
				return this._CashInId;
			}
			set
			{
				if ((this._CashInId != value))
				{
					this.OnCashInIdChanging(value);
					this.SendPropertyChanging();
					this._CashInId = value;
					this.SendPropertyChanged("CashInId");
					this.OnCashInIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashResultId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CashResultId
		{
			get
			{
				return this._CashResultId;
			}
			set
			{
				if ((this._CashResultId != value))
				{
					this.OnCashResultIdChanging(value);
					this.SendPropertyChanging();
					this._CashResultId = value;
					this.SendPropertyChanged("CashResultId");
					this.OnCashResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashResults")]
	public partial class CashResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CashResultId;
		
		private System.Guid _TournamentId;
		
		private System.Guid _UserId;
		
		private System.Nullable<System.Guid> _CashTableId;
		
		private System.Guid _PlayerId;
		
		private int _Duration;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<double> _Quociente;
		
		private System.Nullable<double> _CashOut;
		
		private System.Nullable<int> _CashBack;
		
		private System.Nullable<int> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCashResultIdChanging(System.Guid value);
    partial void OnCashResultIdChanged();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCashTableIdChanging(System.Nullable<System.Guid> value);
    partial void OnCashTableIdChanged();
    partial void OnPlayerIdChanging(System.Guid value);
    partial void OnPlayerIdChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnQuocienteChanging(System.Nullable<double> value);
    partial void OnQuocienteChanged();
    partial void OnCashOutChanging(System.Nullable<double> value);
    partial void OnCashOutChanged();
    partial void OnCashBackChanging(System.Nullable<int> value);
    partial void OnCashBackChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    #endregion
		
		public CashResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashResultId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CashResultId
		{
			get
			{
				return this._CashResultId;
			}
			set
			{
				if ((this._CashResultId != value))
				{
					this.OnCashResultIdChanging(value);
					this.SendPropertyChanging();
					this._CashResultId = value;
					this.SendPropertyChanged("CashResultId");
					this.OnCashResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTableId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CashTableId
		{
			get
			{
				return this._CashTableId;
			}
			set
			{
				if ((this._CashTableId != value))
				{
					this.OnCashTableIdChanging(value);
					this.SendPropertyChanging();
					this._CashTableId = value;
					this.SendPropertyChanged("CashTableId");
					this.OnCashTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PlayerId
		{
			get
			{
				return this._PlayerId;
			}
			set
			{
				if ((this._PlayerId != value))
				{
					this.OnPlayerIdChanging(value);
					this.SendPropertyChanging();
					this._PlayerId = value;
					this.SendPropertyChanged("PlayerId");
					this.OnPlayerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quociente", DbType="Float")]
		public System.Nullable<double> Quociente
		{
			get
			{
				return this._Quociente;
			}
			set
			{
				if ((this._Quociente != value))
				{
					this.OnQuocienteChanging(value);
					this.SendPropertyChanging();
					this._Quociente = value;
					this.SendPropertyChanged("Quociente");
					this.OnQuocienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashOut", DbType="Float")]
		public System.Nullable<double> CashOut
		{
			get
			{
				return this._CashOut;
			}
			set
			{
				if ((this._CashOut != value))
				{
					this.OnCashOutChanging(value);
					this.SendPropertyChanging();
					this._CashOut = value;
					this.SendPropertyChanged("CashOut");
					this.OnCashOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashBack", DbType="Int")]
		public System.Nullable<int> CashBack
		{
			get
			{
				return this._CashBack;
			}
			set
			{
				if ((this._CashBack != value))
				{
					this.OnCashBackChanging(value);
					this.SendPropertyChanging();
					this._CashBack = value;
					this.SendPropertyChanged("CashBack");
					this.OnCashBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashState")]
	public partial class CashState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private decimal _Input;
		
		private decimal _LastInput;
		
		private decimal _Rake;
		
		private decimal _Jackpot;
		
		private System.DateTime _DateCreated;
		
		private System.Guid _CreatedByUserId;
		
		private System.Nullable<System.Guid> _ModifiedByUserId;
		
		private int _State;
		
		private System.Guid _TournamentId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnInputChanging(decimal value);
    partial void OnInputChanged();
    partial void OnLastInputChanging(decimal value);
    partial void OnLastInputChanged();
    partial void OnRakeChanging(decimal value);
    partial void OnRakeChanged();
    partial void OnJackpotChanging(decimal value);
    partial void OnJackpotChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByUserIdChanging(System.Guid value);
    partial void OnCreatedByUserIdChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    #endregion
		
		public CashState()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Input", DbType="Decimal(18,2) NOT NULL")]
		public decimal Input
		{
			get
			{
				return this._Input;
			}
			set
			{
				if ((this._Input != value))
				{
					this.OnInputChanging(value);
					this.SendPropertyChanging();
					this._Input = value;
					this.SendPropertyChanged("Input");
					this.OnInputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastInput", DbType="Decimal(18,2) NOT NULL")]
		public decimal LastInput
		{
			get
			{
				return this._LastInput;
			}
			set
			{
				if ((this._LastInput != value))
				{
					this.OnLastInputChanging(value);
					this.SendPropertyChanging();
					this._LastInput = value;
					this.SendPropertyChanged("LastInput");
					this.OnLastInputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rake", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rake
		{
			get
			{
				return this._Rake;
			}
			set
			{
				if ((this._Rake != value))
				{
					this.OnRakeChanging(value);
					this.SendPropertyChanging();
					this._Rake = value;
					this.SendPropertyChanged("Rake");
					this.OnRakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jackpot", DbType="Decimal(18,2) NOT NULL")]
		public decimal Jackpot
		{
			get
			{
				return this._Jackpot;
			}
			set
			{
				if ((this._Jackpot != value))
				{
					this.OnJackpotChanging(value);
					this.SendPropertyChanging();
					this._Jackpot = value;
					this.SendPropertyChanged("Jackpot");
					this.OnJackpotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashTables")]
	public partial class CashTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CashTableId;
		
		private System.Guid _TournamentId;
		
		private int _GameType;
		
		private string _Name;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<System.DateTime> _DateClosed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCashTableIdChanging(System.Guid value);
    partial void OnCashTableIdChanged();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnGameTypeChanging(int value);
    partial void OnGameTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDateClosedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateClosedChanged();
    #endregion
		
		public CashTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTableId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CashTableId
		{
			get
			{
				return this._CashTableId;
			}
			set
			{
				if ((this._CashTableId != value))
				{
					this.OnCashTableIdChanging(value);
					this.SendPropertyChanging();
					this._CashTableId = value;
					this.SendPropertyChanged("CashTableId");
					this.OnCashTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameType", DbType="Int NOT NULL")]
		public int GameType
		{
			get
			{
				return this._GameType;
			}
			set
			{
				if ((this._GameType != value))
				{
					this.OnGameTypeChanging(value);
					this.SendPropertyChanging();
					this._GameType = value;
					this.SendPropertyChanged("GameType");
					this.OnGameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateClosed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateClosed
		{
			get
			{
				return this._DateClosed;
			}
			set
			{
				if ((this._DateClosed != value))
				{
					this.OnDateClosedChanging(value);
					this.SendPropertyChanging();
					this._DateClosed = value;
					this.SendPropertyChanged("DateClosed");
					this.OnDateClosedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Galleries")]
	public partial class Gallery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GalleryId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGalleryIdChanging(System.Guid value);
    partial void OnGalleryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public Gallery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GalleryId
		{
			get
			{
				return this._GalleryId;
			}
			set
			{
				if ((this._GalleryId != value))
				{
					this.OnGalleryIdChanging(value);
					this.SendPropertyChanging();
					this._GalleryId = value;
					this.SendPropertyChanged("GalleryId");
					this.OnGalleryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Leagues")]
	public partial class League : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LeagueId;
		
		private System.Guid _CreatedByUserId;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private int _OldId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeagueIdChanging(System.Guid value);
    partial void OnLeagueIdChanged();
    partial void OnCreatedByUserIdChanging(System.Guid value);
    partial void OnCreatedByUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnOldIdChanging(int value);
    partial void OnOldIdChanged();
    #endregion
		
		public League()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LeagueId
		{
			get
			{
				return this._LeagueId;
			}
			set
			{
				if ((this._LeagueId != value))
				{
					this.OnLeagueIdChanging(value);
					this.SendPropertyChanging();
					this._LeagueId = value;
					this.SendPropertyChanged("LeagueId");
					this.OnLeagueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="Int NOT NULL")]
		public int OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logins")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LoginId;
		
		private System.Guid _UserId;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIdChanging(System.Guid value);
    partial void OnLoginIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NewsId;
		
		private System.Guid _CreatedByUserId;
		
		private System.Nullable<System.Guid> _DeletedByUserId;
		
		private string _Title;
		
		private string _Text;
		
		private string _Link;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIdChanging(System.Guid value);
    partial void OnNewsIdChanged();
    partial void OnCreatedByUserIdChanging(System.Guid value);
    partial void OnCreatedByUserIdChanged();
    partial void OnDeletedByUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnDeletedByUserIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public New()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NewsId
		{
			get
			{
				return this._NewsId;
			}
			set
			{
				if ((this._NewsId != value))
				{
					this.OnNewsIdChanging(value);
					this.SendPropertyChanging();
					this._NewsId = value;
					this.SendPropertyChanged("NewsId");
					this.OnNewsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedByUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeletedByUserId
		{
			get
			{
				return this._DeletedByUserId;
			}
			set
			{
				if ((this._DeletedByUserId != value))
				{
					this.OnDeletedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._DeletedByUserId = value;
					this.SendPropertyChanged("DeletedByUserId");
					this.OnDeletedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(8000) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personal")]
	public partial class Personal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PersonId;
		
		private System.Data.Linq.Binary _FirstName;
		
		private string _LastName;
		
		private string _Login;
		
		private string _Password;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnFirstNameChanging(System.Data.Linq.Binary value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public Personal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Photos")]
	public partial class Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PhotoId;
		
		private System.Guid _GalleryId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoIdChanging(System.Guid value);
    partial void OnPhotoIdChanged();
    partial void OnGalleryIdChanging(System.Guid value);
    partial void OnGalleryIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public Photo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					this.OnPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoId = value;
					this.SendPropertyChanged("PhotoId");
					this.OnPhotoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GalleryId
		{
			get
			{
				return this._GalleryId;
			}
			set
			{
				if ((this._GalleryId != value))
				{
					this.OnGalleryIdChanging(value);
					this.SendPropertyChanging();
					this._GalleryId = value;
					this.SendPropertyChanged("GalleryId");
					this.OnGalleryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requests")]
	public partial class Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RequestId;
		
		private System.Guid _UserId;
		
		private System.Nullable<System.Guid> _AssignedTo;
		
		private int _Status;
		
		private int _Type;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<System.DateTime> _DateCompleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIdChanging(System.Guid value);
    partial void OnRequestIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnAssignedToChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedToChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    #endregion
		
		public Request()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTo", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AssignedTo
		{
			get
			{
				return this._AssignedTo;
			}
			set
			{
				if ((this._AssignedTo != value))
				{
					this.OnAssignedToChanging(value);
					this.SendPropertyChanging();
					this._AssignedTo = value;
					this.SendPropertyChanged("AssignedTo");
					this.OnAssignedToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Screenshots")]
	public partial class Screenshot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScreenshotId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateSolved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScreenshotIdChanging(System.Guid value);
    partial void OnScreenshotIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateSolvedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSolvedChanged();
    #endregion
		
		public Screenshot()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenshotId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScreenshotId
		{
			get
			{
				return this._ScreenshotId;
			}
			set
			{
				if ((this._ScreenshotId != value))
				{
					this.OnScreenshotIdChanging(value);
					this.SendPropertyChanging();
					this._ScreenshotId = value;
					this.SendPropertyChanged("ScreenshotId");
					this.OnScreenshotIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSolved", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSolved
		{
			get
			{
				return this._DateSolved;
			}
			set
			{
				if ((this._DateSolved != value))
				{
					this.OnDateSolvedChanging(value);
					this.SendPropertyChanging();
					this._DateSolved = value;
					this.SendPropertyChanged("DateSolved");
					this.OnDateSolvedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StructureDetails")]
	public partial class StructureDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StructureDetailId;
		
		private System.Guid _StructureId;
		
		private int _Type;
		
		private int _Number;
		
		private int _Level;
		
		private int _SmallBlind;
		
		private int _BigBlind;
		
		private int _Ante;
		
		private int _Time;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStructureDetailIdChanging(System.Guid value);
    partial void OnStructureDetailIdChanged();
    partial void OnStructureIdChanging(System.Guid value);
    partial void OnStructureIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnSmallBlindChanging(int value);
    partial void OnSmallBlindChanged();
    partial void OnBigBlindChanging(int value);
    partial void OnBigBlindChanged();
    partial void OnAnteChanging(int value);
    partial void OnAnteChanged();
    partial void OnTimeChanging(int value);
    partial void OnTimeChanged();
    #endregion
		
		public StructureDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureDetailId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StructureDetailId
		{
			get
			{
				return this._StructureDetailId;
			}
			set
			{
				if ((this._StructureDetailId != value))
				{
					this.OnStructureDetailIdChanging(value);
					this.SendPropertyChanging();
					this._StructureDetailId = value;
					this.SendPropertyChanged("StructureDetailId");
					this.OnStructureDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StructureId
		{
			get
			{
				return this._StructureId;
			}
			set
			{
				if ((this._StructureId != value))
				{
					this.OnStructureIdChanging(value);
					this.SendPropertyChanging();
					this._StructureId = value;
					this.SendPropertyChanged("StructureId");
					this.OnStructureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallBlind", DbType="Int NOT NULL")]
		public int SmallBlind
		{
			get
			{
				return this._SmallBlind;
			}
			set
			{
				if ((this._SmallBlind != value))
				{
					this.OnSmallBlindChanging(value);
					this.SendPropertyChanging();
					this._SmallBlind = value;
					this.SendPropertyChanged("SmallBlind");
					this.OnSmallBlindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigBlind", DbType="Int NOT NULL")]
		public int BigBlind
		{
			get
			{
				return this._BigBlind;
			}
			set
			{
				if ((this._BigBlind != value))
				{
					this.OnBigBlindChanging(value);
					this.SendPropertyChanging();
					this._BigBlind = value;
					this.SendPropertyChanged("BigBlind");
					this.OnBigBlindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ante", DbType="Int NOT NULL")]
		public int Ante
		{
			get
			{
				return this._Ante;
			}
			set
			{
				if ((this._Ante != value))
				{
					this.OnAnteChanging(value);
					this.SendPropertyChanging();
					this._Ante = value;
					this.SendPropertyChanged("Ante");
					this.OnAnteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Int NOT NULL")]
		public int Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Structures")]
	public partial class Structure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StructureId;
		
		private string _Name;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private int _DataFreezedLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStructureIdChanging(System.Guid value);
    partial void OnStructureIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDataFreezedLevelChanging(int value);
    partial void OnDataFreezedLevelChanged();
    #endregion
		
		public Structure()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StructureId
		{
			get
			{
				return this._StructureId;
			}
			set
			{
				if ((this._StructureId != value))
				{
					this.OnStructureIdChanging(value);
					this.SendPropertyChanging();
					this._StructureId = value;
					this.SendPropertyChanged("StructureId");
					this.OnStructureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFreezedLevel", DbType="Int NOT NULL")]
		public int DataFreezedLevel
		{
			get
			{
				return this._DataFreezedLevel;
			}
			set
			{
				if ((this._DataFreezedLevel != value))
				{
					this.OnDataFreezedLevelChanging(value);
					this.SendPropertyChanging();
					this._DataFreezedLevel = value;
					this.SendPropertyChanged("DataFreezedLevel");
					this.OnDataFreezedLevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tips")]
	public partial class Tip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _UserId;
		
		private int _Points;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPointsChanging(int value);
    partial void OnPointsChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Tip()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int NOT NULL")]
		public int Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TournamentCashouts")]
	public partial class TournamentCashout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TournamentCashoutId;
		
		private System.Guid _TournamentId;
		
		private double _Rake;
		
		private double _PrizePool;
		
		private double _Food;
		
		private double _Dotation;
		
		private double _Floor;
		
		private string _Comment;
		
		private double _CGBank;
		
		private double _APCBank;
		
		private double _Place_01;
		
		private double _Place_02;
		
		private double _Place_03;
		
		private double _Place_04;
		
		private double _Place_05;
		
		private double _Place_06;
		
		private double _Place_07;
		
		private double _Place_08;
		
		private double _Place_09;
		
		private double _Place_10;
		
		private System.Nullable<int> _BonusCash;
		
		private System.Nullable<int> _Dealer;
		
		private System.Nullable<int> _BonusUsed;
		
		private System.Nullable<int> _RunnerHelp;
		
		private System.Nullable<decimal> _Tips;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTournamentCashoutIdChanging(System.Guid value);
    partial void OnTournamentCashoutIdChanged();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnRakeChanging(double value);
    partial void OnRakeChanged();
    partial void OnPrizePoolChanging(double value);
    partial void OnPrizePoolChanged();
    partial void OnFoodChanging(double value);
    partial void OnFoodChanged();
    partial void OnDotationChanging(double value);
    partial void OnDotationChanged();
    partial void OnFloorChanging(double value);
    partial void OnFloorChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCGBankChanging(double value);
    partial void OnCGBankChanged();
    partial void OnAPCBankChanging(double value);
    partial void OnAPCBankChanged();
    partial void OnPlace_01Changing(double value);
    partial void OnPlace_01Changed();
    partial void OnPlace_02Changing(double value);
    partial void OnPlace_02Changed();
    partial void OnPlace_03Changing(double value);
    partial void OnPlace_03Changed();
    partial void OnPlace_04Changing(double value);
    partial void OnPlace_04Changed();
    partial void OnPlace_05Changing(double value);
    partial void OnPlace_05Changed();
    partial void OnPlace_06Changing(double value);
    partial void OnPlace_06Changed();
    partial void OnPlace_07Changing(double value);
    partial void OnPlace_07Changed();
    partial void OnPlace_08Changing(double value);
    partial void OnPlace_08Changed();
    partial void OnPlace_09Changing(double value);
    partial void OnPlace_09Changed();
    partial void OnPlace_10Changing(double value);
    partial void OnPlace_10Changed();
    partial void OnBonusCashChanging(System.Nullable<int> value);
    partial void OnBonusCashChanged();
    partial void OnDealerChanging(System.Nullable<int> value);
    partial void OnDealerChanged();
    partial void OnBonusUsedChanging(System.Nullable<int> value);
    partial void OnBonusUsedChanged();
    partial void OnRunnerHelpChanging(System.Nullable<int> value);
    partial void OnRunnerHelpChanged();
    partial void OnTipsChanging(System.Nullable<decimal> value);
    partial void OnTipsChanged();
    #endregion
		
		public TournamentCashout()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentCashoutId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TournamentCashoutId
		{
			get
			{
				return this._TournamentCashoutId;
			}
			set
			{
				if ((this._TournamentCashoutId != value))
				{
					this.OnTournamentCashoutIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentCashoutId = value;
					this.SendPropertyChanged("TournamentCashoutId");
					this.OnTournamentCashoutIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rake", DbType="Float NOT NULL")]
		public double Rake
		{
			get
			{
				return this._Rake;
			}
			set
			{
				if ((this._Rake != value))
				{
					this.OnRakeChanging(value);
					this.SendPropertyChanging();
					this._Rake = value;
					this.SendPropertyChanged("Rake");
					this.OnRakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrizePool", DbType="Float NOT NULL")]
		public double PrizePool
		{
			get
			{
				return this._PrizePool;
			}
			set
			{
				if ((this._PrizePool != value))
				{
					this.OnPrizePoolChanging(value);
					this.SendPropertyChanging();
					this._PrizePool = value;
					this.SendPropertyChanged("PrizePool");
					this.OnPrizePoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Food", DbType="Float NOT NULL")]
		public double Food
		{
			get
			{
				return this._Food;
			}
			set
			{
				if ((this._Food != value))
				{
					this.OnFoodChanging(value);
					this.SendPropertyChanging();
					this._Food = value;
					this.SendPropertyChanged("Food");
					this.OnFoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dotation", DbType="Float NOT NULL")]
		public double Dotation
		{
			get
			{
				return this._Dotation;
			}
			set
			{
				if ((this._Dotation != value))
				{
					this.OnDotationChanging(value);
					this.SendPropertyChanging();
					this._Dotation = value;
					this.SendPropertyChanged("Dotation");
					this.OnDotationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="Float NOT NULL")]
		public double Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CGBank", DbType="Float NOT NULL")]
		public double CGBank
		{
			get
			{
				return this._CGBank;
			}
			set
			{
				if ((this._CGBank != value))
				{
					this.OnCGBankChanging(value);
					this.SendPropertyChanging();
					this._CGBank = value;
					this.SendPropertyChanged("CGBank");
					this.OnCGBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APCBank", DbType="Float NOT NULL")]
		public double APCBank
		{
			get
			{
				return this._APCBank;
			}
			set
			{
				if ((this._APCBank != value))
				{
					this.OnAPCBankChanging(value);
					this.SendPropertyChanging();
					this._APCBank = value;
					this.SendPropertyChanged("APCBank");
					this.OnAPCBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_01", DbType="Float NOT NULL")]
		public double Place_01
		{
			get
			{
				return this._Place_01;
			}
			set
			{
				if ((this._Place_01 != value))
				{
					this.OnPlace_01Changing(value);
					this.SendPropertyChanging();
					this._Place_01 = value;
					this.SendPropertyChanged("Place_01");
					this.OnPlace_01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_02", DbType="Float NOT NULL")]
		public double Place_02
		{
			get
			{
				return this._Place_02;
			}
			set
			{
				if ((this._Place_02 != value))
				{
					this.OnPlace_02Changing(value);
					this.SendPropertyChanging();
					this._Place_02 = value;
					this.SendPropertyChanged("Place_02");
					this.OnPlace_02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_03", DbType="Float NOT NULL")]
		public double Place_03
		{
			get
			{
				return this._Place_03;
			}
			set
			{
				if ((this._Place_03 != value))
				{
					this.OnPlace_03Changing(value);
					this.SendPropertyChanging();
					this._Place_03 = value;
					this.SendPropertyChanged("Place_03");
					this.OnPlace_03Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_04", DbType="Float NOT NULL")]
		public double Place_04
		{
			get
			{
				return this._Place_04;
			}
			set
			{
				if ((this._Place_04 != value))
				{
					this.OnPlace_04Changing(value);
					this.SendPropertyChanging();
					this._Place_04 = value;
					this.SendPropertyChanged("Place_04");
					this.OnPlace_04Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_05", DbType="Float NOT NULL")]
		public double Place_05
		{
			get
			{
				return this._Place_05;
			}
			set
			{
				if ((this._Place_05 != value))
				{
					this.OnPlace_05Changing(value);
					this.SendPropertyChanging();
					this._Place_05 = value;
					this.SendPropertyChanged("Place_05");
					this.OnPlace_05Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_06", DbType="Float NOT NULL")]
		public double Place_06
		{
			get
			{
				return this._Place_06;
			}
			set
			{
				if ((this._Place_06 != value))
				{
					this.OnPlace_06Changing(value);
					this.SendPropertyChanging();
					this._Place_06 = value;
					this.SendPropertyChanged("Place_06");
					this.OnPlace_06Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_07", DbType="Float NOT NULL")]
		public double Place_07
		{
			get
			{
				return this._Place_07;
			}
			set
			{
				if ((this._Place_07 != value))
				{
					this.OnPlace_07Changing(value);
					this.SendPropertyChanging();
					this._Place_07 = value;
					this.SendPropertyChanged("Place_07");
					this.OnPlace_07Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_08", DbType="Float NOT NULL")]
		public double Place_08
		{
			get
			{
				return this._Place_08;
			}
			set
			{
				if ((this._Place_08 != value))
				{
					this.OnPlace_08Changing(value);
					this.SendPropertyChanging();
					this._Place_08 = value;
					this.SendPropertyChanged("Place_08");
					this.OnPlace_08Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_09", DbType="Float NOT NULL")]
		public double Place_09
		{
			get
			{
				return this._Place_09;
			}
			set
			{
				if ((this._Place_09 != value))
				{
					this.OnPlace_09Changing(value);
					this.SendPropertyChanging();
					this._Place_09 = value;
					this.SendPropertyChanged("Place_09");
					this.OnPlace_09Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_10", DbType="Float NOT NULL")]
		public double Place_10
		{
			get
			{
				return this._Place_10;
			}
			set
			{
				if ((this._Place_10 != value))
				{
					this.OnPlace_10Changing(value);
					this.SendPropertyChanging();
					this._Place_10 = value;
					this.SendPropertyChanged("Place_10");
					this.OnPlace_10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusCash", DbType="Int")]
		public System.Nullable<int> BonusCash
		{
			get
			{
				return this._BonusCash;
			}
			set
			{
				if ((this._BonusCash != value))
				{
					this.OnBonusCashChanging(value);
					this.SendPropertyChanging();
					this._BonusCash = value;
					this.SendPropertyChanged("BonusCash");
					this.OnBonusCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dealer", DbType="Int")]
		public System.Nullable<int> Dealer
		{
			get
			{
				return this._Dealer;
			}
			set
			{
				if ((this._Dealer != value))
				{
					this.OnDealerChanging(value);
					this.SendPropertyChanging();
					this._Dealer = value;
					this.SendPropertyChanged("Dealer");
					this.OnDealerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusUsed", DbType="Int")]
		public System.Nullable<int> BonusUsed
		{
			get
			{
				return this._BonusUsed;
			}
			set
			{
				if ((this._BonusUsed != value))
				{
					this.OnBonusUsedChanging(value);
					this.SendPropertyChanging();
					this._BonusUsed = value;
					this.SendPropertyChanged("BonusUsed");
					this.OnBonusUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunnerHelp", DbType="Int")]
		public System.Nullable<int> RunnerHelp
		{
			get
			{
				return this._RunnerHelp;
			}
			set
			{
				if ((this._RunnerHelp != value))
				{
					this.OnRunnerHelpChanging(value);
					this.SendPropertyChanging();
					this._RunnerHelp = value;
					this.SendPropertyChanged("RunnerHelp");
					this.OnRunnerHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tips", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Tips
		{
			get
			{
				return this._Tips;
			}
			set
			{
				if ((this._Tips != value))
				{
					this.OnTipsChanging(value);
					this.SendPropertyChanging();
					this._Tips = value;
					this.SendPropertyChanged("Tips");
					this.OnTipsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TournamentDetails")]
	public partial class TournamentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TournamentDetailId;
		
		private System.Guid _TournamentId;
		
		private System.Guid _StructureId;
		
		private int _BuyInPrize;
		
		private int _ReBuyPrize;
		
		private int _AddOnPrize;
		
		private int _BuyInStack;
		
		private int _ReBuyStack;
		
		private int _AddOnStack;
		
		private int _BonusStack;
		
		private bool _IsFullPointed;
		
		private bool _IsLeague;
		
		private System.Nullable<int> _ReEntryCount;
		
		private System.Nullable<int> _GTD;
		
		private System.Nullable<int> _ReBuyCount;
		
		private bool _IsFood;
		
		private System.Nullable<int> _ReEntryTotal;
		
		private string _DealerAddonDesc;
		
		private string _BountyDesc;
		
		private System.Nullable<int> _SpecialAddonPrize;
		
		private System.Nullable<int> _SpecialAddonStack;
		
		private System.Nullable<int> _FullStackBonus;
		
		private bool _IsPercentageBonus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTournamentDetailIdChanging(System.Guid value);
    partial void OnTournamentDetailIdChanged();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnStructureIdChanging(System.Guid value);
    partial void OnStructureIdChanged();
    partial void OnBuyInPrizeChanging(int value);
    partial void OnBuyInPrizeChanged();
    partial void OnReBuyPrizeChanging(int value);
    partial void OnReBuyPrizeChanged();
    partial void OnAddOnPrizeChanging(int value);
    partial void OnAddOnPrizeChanged();
    partial void OnBuyInStackChanging(int value);
    partial void OnBuyInStackChanged();
    partial void OnReBuyStackChanging(int value);
    partial void OnReBuyStackChanged();
    partial void OnAddOnStackChanging(int value);
    partial void OnAddOnStackChanged();
    partial void OnBonusStackChanging(int value);
    partial void OnBonusStackChanged();
    partial void OnIsFullPointedChanging(bool value);
    partial void OnIsFullPointedChanged();
    partial void OnIsLeagueChanging(bool value);
    partial void OnIsLeagueChanged();
    partial void OnReEntryCountChanging(System.Nullable<int> value);
    partial void OnReEntryCountChanged();
    partial void OnGTDChanging(System.Nullable<int> value);
    partial void OnGTDChanged();
    partial void OnReBuyCountChanging(System.Nullable<int> value);
    partial void OnReBuyCountChanged();
    partial void OnIsFoodChanging(bool value);
    partial void OnIsFoodChanged();
    partial void OnReEntryTotalChanging(System.Nullable<int> value);
    partial void OnReEntryTotalChanged();
    partial void OnDealerAddonDescChanging(string value);
    partial void OnDealerAddonDescChanged();
    partial void OnBountyDescChanging(string value);
    partial void OnBountyDescChanged();
    partial void OnSpecialAddonPrizeChanging(System.Nullable<int> value);
    partial void OnSpecialAddonPrizeChanged();
    partial void OnSpecialAddonStackChanging(System.Nullable<int> value);
    partial void OnSpecialAddonStackChanged();
    partial void OnFullStackBonusChanging(System.Nullable<int> value);
    partial void OnFullStackBonusChanged();
    partial void OnIsPercentageBonusChanging(bool value);
    partial void OnIsPercentageBonusChanged();
    #endregion
		
		public TournamentDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentDetailId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TournamentDetailId
		{
			get
			{
				return this._TournamentDetailId;
			}
			set
			{
				if ((this._TournamentDetailId != value))
				{
					this.OnTournamentDetailIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentDetailId = value;
					this.SendPropertyChanged("TournamentDetailId");
					this.OnTournamentDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StructureId
		{
			get
			{
				return this._StructureId;
			}
			set
			{
				if ((this._StructureId != value))
				{
					this.OnStructureIdChanging(value);
					this.SendPropertyChanging();
					this._StructureId = value;
					this.SendPropertyChanged("StructureId");
					this.OnStructureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyInPrize", DbType="Int NOT NULL")]
		public int BuyInPrize
		{
			get
			{
				return this._BuyInPrize;
			}
			set
			{
				if ((this._BuyInPrize != value))
				{
					this.OnBuyInPrizeChanging(value);
					this.SendPropertyChanging();
					this._BuyInPrize = value;
					this.SendPropertyChanged("BuyInPrize");
					this.OnBuyInPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyPrize", DbType="Int NOT NULL")]
		public int ReBuyPrize
		{
			get
			{
				return this._ReBuyPrize;
			}
			set
			{
				if ((this._ReBuyPrize != value))
				{
					this.OnReBuyPrizeChanging(value);
					this.SendPropertyChanging();
					this._ReBuyPrize = value;
					this.SendPropertyChanged("ReBuyPrize");
					this.OnReBuyPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnPrize", DbType="Int NOT NULL")]
		public int AddOnPrize
		{
			get
			{
				return this._AddOnPrize;
			}
			set
			{
				if ((this._AddOnPrize != value))
				{
					this.OnAddOnPrizeChanging(value);
					this.SendPropertyChanging();
					this._AddOnPrize = value;
					this.SendPropertyChanged("AddOnPrize");
					this.OnAddOnPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyInStack", DbType="Int NOT NULL")]
		public int BuyInStack
		{
			get
			{
				return this._BuyInStack;
			}
			set
			{
				if ((this._BuyInStack != value))
				{
					this.OnBuyInStackChanging(value);
					this.SendPropertyChanging();
					this._BuyInStack = value;
					this.SendPropertyChanged("BuyInStack");
					this.OnBuyInStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyStack", DbType="Int NOT NULL")]
		public int ReBuyStack
		{
			get
			{
				return this._ReBuyStack;
			}
			set
			{
				if ((this._ReBuyStack != value))
				{
					this.OnReBuyStackChanging(value);
					this.SendPropertyChanging();
					this._ReBuyStack = value;
					this.SendPropertyChanged("ReBuyStack");
					this.OnReBuyStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnStack", DbType="Int NOT NULL")]
		public int AddOnStack
		{
			get
			{
				return this._AddOnStack;
			}
			set
			{
				if ((this._AddOnStack != value))
				{
					this.OnAddOnStackChanging(value);
					this.SendPropertyChanging();
					this._AddOnStack = value;
					this.SendPropertyChanged("AddOnStack");
					this.OnAddOnStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusStack", DbType="Int NOT NULL")]
		public int BonusStack
		{
			get
			{
				return this._BonusStack;
			}
			set
			{
				if ((this._BonusStack != value))
				{
					this.OnBonusStackChanging(value);
					this.SendPropertyChanging();
					this._BonusStack = value;
					this.SendPropertyChanged("BonusStack");
					this.OnBonusStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFullPointed", DbType="Bit NOT NULL")]
		public bool IsFullPointed
		{
			get
			{
				return this._IsFullPointed;
			}
			set
			{
				if ((this._IsFullPointed != value))
				{
					this.OnIsFullPointedChanging(value);
					this.SendPropertyChanging();
					this._IsFullPointed = value;
					this.SendPropertyChanged("IsFullPointed");
					this.OnIsFullPointedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLeague", DbType="Bit NOT NULL")]
		public bool IsLeague
		{
			get
			{
				return this._IsLeague;
			}
			set
			{
				if ((this._IsLeague != value))
				{
					this.OnIsLeagueChanging(value);
					this.SendPropertyChanging();
					this._IsLeague = value;
					this.SendPropertyChanged("IsLeague");
					this.OnIsLeagueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReEntryCount", DbType="Int")]
		public System.Nullable<int> ReEntryCount
		{
			get
			{
				return this._ReEntryCount;
			}
			set
			{
				if ((this._ReEntryCount != value))
				{
					this.OnReEntryCountChanging(value);
					this.SendPropertyChanging();
					this._ReEntryCount = value;
					this.SendPropertyChanged("ReEntryCount");
					this.OnReEntryCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTD", DbType="Int")]
		public System.Nullable<int> GTD
		{
			get
			{
				return this._GTD;
			}
			set
			{
				if ((this._GTD != value))
				{
					this.OnGTDChanging(value);
					this.SendPropertyChanging();
					this._GTD = value;
					this.SendPropertyChanged("GTD");
					this.OnGTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyCount", DbType="Int")]
		public System.Nullable<int> ReBuyCount
		{
			get
			{
				return this._ReBuyCount;
			}
			set
			{
				if ((this._ReBuyCount != value))
				{
					this.OnReBuyCountChanging(value);
					this.SendPropertyChanging();
					this._ReBuyCount = value;
					this.SendPropertyChanged("ReBuyCount");
					this.OnReBuyCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFood", DbType="Bit NOT NULL")]
		public bool IsFood
		{
			get
			{
				return this._IsFood;
			}
			set
			{
				if ((this._IsFood != value))
				{
					this.OnIsFoodChanging(value);
					this.SendPropertyChanging();
					this._IsFood = value;
					this.SendPropertyChanged("IsFood");
					this.OnIsFoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReEntryTotal", DbType="Int")]
		public System.Nullable<int> ReEntryTotal
		{
			get
			{
				return this._ReEntryTotal;
			}
			set
			{
				if ((this._ReEntryTotal != value))
				{
					this.OnReEntryTotalChanging(value);
					this.SendPropertyChanging();
					this._ReEntryTotal = value;
					this.SendPropertyChanged("ReEntryTotal");
					this.OnReEntryTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerAddonDesc", DbType="VarChar(50)")]
		public string DealerAddonDesc
		{
			get
			{
				return this._DealerAddonDesc;
			}
			set
			{
				if ((this._DealerAddonDesc != value))
				{
					this.OnDealerAddonDescChanging(value);
					this.SendPropertyChanging();
					this._DealerAddonDesc = value;
					this.SendPropertyChanged("DealerAddonDesc");
					this.OnDealerAddonDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BountyDesc", DbType="VarChar(50)")]
		public string BountyDesc
		{
			get
			{
				return this._BountyDesc;
			}
			set
			{
				if ((this._BountyDesc != value))
				{
					this.OnBountyDescChanging(value);
					this.SendPropertyChanging();
					this._BountyDesc = value;
					this.SendPropertyChanged("BountyDesc");
					this.OnBountyDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialAddonPrize", DbType="Int")]
		public System.Nullable<int> SpecialAddonPrize
		{
			get
			{
				return this._SpecialAddonPrize;
			}
			set
			{
				if ((this._SpecialAddonPrize != value))
				{
					this.OnSpecialAddonPrizeChanging(value);
					this.SendPropertyChanging();
					this._SpecialAddonPrize = value;
					this.SendPropertyChanged("SpecialAddonPrize");
					this.OnSpecialAddonPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialAddonStack", DbType="Int")]
		public System.Nullable<int> SpecialAddonStack
		{
			get
			{
				return this._SpecialAddonStack;
			}
			set
			{
				if ((this._SpecialAddonStack != value))
				{
					this.OnSpecialAddonStackChanging(value);
					this.SendPropertyChanging();
					this._SpecialAddonStack = value;
					this.SendPropertyChanged("SpecialAddonStack");
					this.OnSpecialAddonStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullStackBonus", DbType="Int")]
		public System.Nullable<int> FullStackBonus
		{
			get
			{
				return this._FullStackBonus;
			}
			set
			{
				if ((this._FullStackBonus != value))
				{
					this.OnFullStackBonusChanging(value);
					this.SendPropertyChanging();
					this._FullStackBonus = value;
					this.SendPropertyChanged("FullStackBonus");
					this.OnFullStackBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPercentageBonus", DbType="Bit NOT NULL")]
		public bool IsPercentageBonus
		{
			get
			{
				return this._IsPercentageBonus;
			}
			set
			{
				if ((this._IsPercentageBonus != value))
				{
					this.OnIsPercentageBonusChanging(value);
					this.SendPropertyChanging();
					this._IsPercentageBonus = value;
					this.SendPropertyChanged("IsPercentageBonus");
					this.OnIsPercentageBonusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TournamentResults")]
	public partial class TournamentResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TournamentResultId;
		
		private System.Guid _TournamentId;
		
		private System.Guid _UserId;
		
		private bool _IsTimeBonus;
		
		private double _Points;
		
		private int _Rank;
		
		private int _ReBuyCount;
		
		private int _AddOnCount;
		
		private int _PokerCount;
		
		private int _StraightFlushCount;
		
		private int _RoyalFlushCount;
		
		private System.DateTime _DateAdded;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<System.DateTime> _DateReEntry;
		
		private System.Nullable<int> _ReEntryCount;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _SpecialAddOnCount;
		
		private System.Nullable<System.DateTime> _InitDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTournamentResultIdChanging(System.Guid value);
    partial void OnTournamentResultIdChanged();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIsTimeBonusChanging(bool value);
    partial void OnIsTimeBonusChanged();
    partial void OnPointsChanging(double value);
    partial void OnPointsChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnReBuyCountChanging(int value);
    partial void OnReBuyCountChanged();
    partial void OnAddOnCountChanging(int value);
    partial void OnAddOnCountChanged();
    partial void OnPokerCountChanging(int value);
    partial void OnPokerCountChanged();
    partial void OnStraightFlushCountChanging(int value);
    partial void OnStraightFlushCountChanged();
    partial void OnRoyalFlushCountChanging(int value);
    partial void OnRoyalFlushCountChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDateReEntryChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReEntryChanged();
    partial void OnReEntryCountChanging(System.Nullable<int> value);
    partial void OnReEntryCountChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnSpecialAddOnCountChanging(System.Nullable<int> value);
    partial void OnSpecialAddOnCountChanged();
    partial void OnInitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInitDateChanged();
    #endregion
		
		public TournamentResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentResultId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TournamentResultId
		{
			get
			{
				return this._TournamentResultId;
			}
			set
			{
				if ((this._TournamentResultId != value))
				{
					this.OnTournamentResultIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentResultId = value;
					this.SendPropertyChanged("TournamentResultId");
					this.OnTournamentResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTimeBonus", DbType="Bit NOT NULL")]
		public bool IsTimeBonus
		{
			get
			{
				return this._IsTimeBonus;
			}
			set
			{
				if ((this._IsTimeBonus != value))
				{
					this.OnIsTimeBonusChanging(value);
					this.SendPropertyChanging();
					this._IsTimeBonus = value;
					this.SendPropertyChanged("IsTimeBonus");
					this.OnIsTimeBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Float NOT NULL")]
		public double Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyCount", DbType="Int NOT NULL")]
		public int ReBuyCount
		{
			get
			{
				return this._ReBuyCount;
			}
			set
			{
				if ((this._ReBuyCount != value))
				{
					this.OnReBuyCountChanging(value);
					this.SendPropertyChanging();
					this._ReBuyCount = value;
					this.SendPropertyChanged("ReBuyCount");
					this.OnReBuyCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnCount", DbType="Int NOT NULL")]
		public int AddOnCount
		{
			get
			{
				return this._AddOnCount;
			}
			set
			{
				if ((this._AddOnCount != value))
				{
					this.OnAddOnCountChanging(value);
					this.SendPropertyChanging();
					this._AddOnCount = value;
					this.SendPropertyChanged("AddOnCount");
					this.OnAddOnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokerCount", DbType="Int NOT NULL")]
		public int PokerCount
		{
			get
			{
				return this._PokerCount;
			}
			set
			{
				if ((this._PokerCount != value))
				{
					this.OnPokerCountChanging(value);
					this.SendPropertyChanging();
					this._PokerCount = value;
					this.SendPropertyChanged("PokerCount");
					this.OnPokerCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StraightFlushCount", DbType="Int NOT NULL")]
		public int StraightFlushCount
		{
			get
			{
				return this._StraightFlushCount;
			}
			set
			{
				if ((this._StraightFlushCount != value))
				{
					this.OnStraightFlushCountChanging(value);
					this.SendPropertyChanging();
					this._StraightFlushCount = value;
					this.SendPropertyChanged("StraightFlushCount");
					this.OnStraightFlushCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoyalFlushCount", DbType="Int NOT NULL")]
		public int RoyalFlushCount
		{
			get
			{
				return this._RoyalFlushCount;
			}
			set
			{
				if ((this._RoyalFlushCount != value))
				{
					this.OnRoyalFlushCountChanging(value);
					this.SendPropertyChanging();
					this._RoyalFlushCount = value;
					this.SendPropertyChanged("RoyalFlushCount");
					this.OnRoyalFlushCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReEntry", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReEntry
		{
			get
			{
				return this._DateReEntry;
			}
			set
			{
				if ((this._DateReEntry != value))
				{
					this.OnDateReEntryChanging(value);
					this.SendPropertyChanging();
					this._DateReEntry = value;
					this.SendPropertyChanged("DateReEntry");
					this.OnDateReEntryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReEntryCount", DbType="Int")]
		public System.Nullable<int> ReEntryCount
		{
			get
			{
				return this._ReEntryCount;
			}
			set
			{
				if ((this._ReEntryCount != value))
				{
					this.OnReEntryCountChanging(value);
					this.SendPropertyChanging();
					this._ReEntryCount = value;
					this.SendPropertyChanged("ReEntryCount");
					this.OnReEntryCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialAddOnCount", DbType="Int")]
		public System.Nullable<int> SpecialAddOnCount
		{
			get
			{
				return this._SpecialAddOnCount;
			}
			set
			{
				if ((this._SpecialAddOnCount != value))
				{
					this.OnSpecialAddOnCountChanging(value);
					this.SendPropertyChanging();
					this._SpecialAddOnCount = value;
					this.SendPropertyChanged("SpecialAddOnCount");
					this.OnSpecialAddOnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitDate", DbType="Date")]
		public System.Nullable<System.DateTime> InitDate
		{
			get
			{
				return this._InitDate;
			}
			set
			{
				if ((this._InitDate != value))
				{
					this.OnInitDateChanging(value);
					this.SendPropertyChanging();
					this._InitDate = value;
					this.SendPropertyChanged("InitDate");
					this.OnInitDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tournaments")]
	public partial class Tournament : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TournamentId;
		
		private System.Guid _LeagueId;
		
		private System.Guid _CreatedByUserId;
		
		private System.Nullable<System.Guid> _DeletedByUserId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private string _Name;
		
		private System.DateTime _Date;
		
		private char _GameType;
		
		private string _Description;
		
		private long _OldId;
		
		private System.Nullable<System.DateTime> _DateEnded;
		
		private System.Nullable<bool> _IsHidden;
		
		private string _FacebookLink;
		
		private System.Nullable<bool> _IsRunning;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnLeagueIdChanging(System.Guid value);
    partial void OnLeagueIdChanged();
    partial void OnCreatedByUserIdChanging(System.Guid value);
    partial void OnCreatedByUserIdChanged();
    partial void OnDeletedByUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnDeletedByUserIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnGameTypeChanging(char value);
    partial void OnGameTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOldIdChanging(long value);
    partial void OnOldIdChanged();
    partial void OnDateEndedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndedChanged();
    partial void OnIsHiddenChanging(System.Nullable<bool> value);
    partial void OnIsHiddenChanged();
    partial void OnFacebookLinkChanging(string value);
    partial void OnFacebookLinkChanged();
    partial void OnIsRunningChanging(System.Nullable<bool> value);
    partial void OnIsRunningChanged();
    #endregion
		
		public Tournament()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LeagueId
		{
			get
			{
				return this._LeagueId;
			}
			set
			{
				if ((this._LeagueId != value))
				{
					this.OnLeagueIdChanging(value);
					this.SendPropertyChanging();
					this._LeagueId = value;
					this.SendPropertyChanged("LeagueId");
					this.OnLeagueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedByUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeletedByUserId
		{
			get
			{
				return this._DeletedByUserId;
			}
			set
			{
				if ((this._DeletedByUserId != value))
				{
					this.OnDeletedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._DeletedByUserId = value;
					this.SendPropertyChanged("DeletedByUserId");
					this.OnDeletedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameType", DbType="Char(1) NOT NULL")]
		public char GameType
		{
			get
			{
				return this._GameType;
			}
			set
			{
				if ((this._GameType != value))
				{
					this.OnGameTypeChanging(value);
					this.SendPropertyChanging();
					this._GameType = value;
					this.SendPropertyChanged("GameType");
					this.OnGameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="BigInt NOT NULL")]
		public long OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnded
		{
			get
			{
				return this._DateEnded;
			}
			set
			{
				if ((this._DateEnded != value))
				{
					this.OnDateEndedChanging(value);
					this.SendPropertyChanging();
					this._DateEnded = value;
					this.SendPropertyChanged("DateEnded");
					this.OnDateEndedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit")]
		public System.Nullable<bool> IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookLink", DbType="VarChar(500)")]
		public string FacebookLink
		{
			get
			{
				return this._FacebookLink;
			}
			set
			{
				if ((this._FacebookLink != value))
				{
					this.OnFacebookLinkChanging(value);
					this.SendPropertyChanging();
					this._FacebookLink = value;
					this.SendPropertyChanged("FacebookLink");
					this.OnFacebookLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRunning", DbType="Bit")]
		public System.Nullable<bool> IsRunning
		{
			get
			{
				return this._IsRunning;
			}
			set
			{
				if ((this._IsRunning != value))
				{
					this.OnIsRunningChanging(value);
					this.SendPropertyChanging();
					this._IsRunning = value;
					this.SendPropertyChanged("IsRunning");
					this.OnIsRunningChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TournamentStats")]
	public partial class TournamentStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TournamentStatId;
		
		private System.Guid _TournamentId;
		
		private int _CurrentLevel;
		
		private int _CurrentMinute;
		
		private bool _IsAuto;
		
		private string _SubTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTournamentStatIdChanging(System.Guid value);
    partial void OnTournamentStatIdChanged();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnCurrentLevelChanging(int value);
    partial void OnCurrentLevelChanged();
    partial void OnCurrentMinuteChanging(int value);
    partial void OnCurrentMinuteChanged();
    partial void OnIsAutoChanging(bool value);
    partial void OnIsAutoChanged();
    partial void OnSubTitleChanging(string value);
    partial void OnSubTitleChanged();
    #endregion
		
		public TournamentStat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentStatId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TournamentStatId
		{
			get
			{
				return this._TournamentStatId;
			}
			set
			{
				if ((this._TournamentStatId != value))
				{
					this.OnTournamentStatIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentStatId = value;
					this.SendPropertyChanged("TournamentStatId");
					this.OnTournamentStatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentLevel", DbType="Int NOT NULL")]
		public int CurrentLevel
		{
			get
			{
				return this._CurrentLevel;
			}
			set
			{
				if ((this._CurrentLevel != value))
				{
					this.OnCurrentLevelChanging(value);
					this.SendPropertyChanging();
					this._CurrentLevel = value;
					this.SendPropertyChanged("CurrentLevel");
					this.OnCurrentLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentMinute", DbType="Int NOT NULL")]
		public int CurrentMinute
		{
			get
			{
				return this._CurrentMinute;
			}
			set
			{
				if ((this._CurrentMinute != value))
				{
					this.OnCurrentMinuteChanging(value);
					this.SendPropertyChanging();
					this._CurrentMinute = value;
					this.SendPropertyChanged("CurrentMinute");
					this.OnCurrentMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuto", DbType="Bit NOT NULL")]
		public bool IsAuto
		{
			get
			{
				return this._IsAuto;
			}
			set
			{
				if ((this._IsAuto != value))
				{
					this.OnIsAutoChanging(value);
					this.SendPropertyChanging();
					this._IsAuto = value;
					this.SendPropertyChanged("IsAuto");
					this.OnIsAutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubTitle
		{
			get
			{
				return this._SubTitle;
			}
			set
			{
				if ((this._SubTitle != value))
				{
					this.OnSubTitleChanging(value);
					this.SendPropertyChanging();
					this._SubTitle = value;
					this.SendPropertyChanged("SubTitle");
					this.OnSubTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TournamentTemplates")]
	public partial class TournamentTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TournamentTemplateId;
		
		private System.Guid _StrucktureId;
		
		private System.Guid _CreatedBy;
		
		private string _Name;
		
		private int _BuyInPrize;
		
		private int _ReBuyPrize;
		
		private int _AddOnPrize;
		
		private int _BuyInStack;
		
		private int _ReBuyStack;
		
		private int _AddOnStack;
		
		private int _BonusStack;
		
		private char _GameType;
		
		private bool _IsLeague;
		
		private bool _IsFullPointed;
		
		private string _Description;
		
		private int _StartHour;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTournamentTemplateIdChanging(System.Guid value);
    partial void OnTournamentTemplateIdChanged();
    partial void OnStrucktureIdChanging(System.Guid value);
    partial void OnStrucktureIdChanged();
    partial void OnCreatedByChanging(System.Guid value);
    partial void OnCreatedByChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBuyInPrizeChanging(int value);
    partial void OnBuyInPrizeChanged();
    partial void OnReBuyPrizeChanging(int value);
    partial void OnReBuyPrizeChanged();
    partial void OnAddOnPrizeChanging(int value);
    partial void OnAddOnPrizeChanged();
    partial void OnBuyInStackChanging(int value);
    partial void OnBuyInStackChanged();
    partial void OnReBuyStackChanging(int value);
    partial void OnReBuyStackChanged();
    partial void OnAddOnStackChanging(int value);
    partial void OnAddOnStackChanged();
    partial void OnBonusStackChanging(int value);
    partial void OnBonusStackChanged();
    partial void OnGameTypeChanging(char value);
    partial void OnGameTypeChanged();
    partial void OnIsLeagueChanging(bool value);
    partial void OnIsLeagueChanged();
    partial void OnIsFullPointedChanging(bool value);
    partial void OnIsFullPointedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartHourChanging(int value);
    partial void OnStartHourChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public TournamentTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentTemplateId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TournamentTemplateId
		{
			get
			{
				return this._TournamentTemplateId;
			}
			set
			{
				if ((this._TournamentTemplateId != value))
				{
					this.OnTournamentTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentTemplateId = value;
					this.SendPropertyChanged("TournamentTemplateId");
					this.OnTournamentTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrucktureId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StrucktureId
		{
			get
			{
				return this._StrucktureId;
			}
			set
			{
				if ((this._StrucktureId != value))
				{
					this.OnStrucktureIdChanging(value);
					this.SendPropertyChanging();
					this._StrucktureId = value;
					this.SendPropertyChanged("StrucktureId");
					this.OnStrucktureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyInPrize", DbType="Int NOT NULL")]
		public int BuyInPrize
		{
			get
			{
				return this._BuyInPrize;
			}
			set
			{
				if ((this._BuyInPrize != value))
				{
					this.OnBuyInPrizeChanging(value);
					this.SendPropertyChanging();
					this._BuyInPrize = value;
					this.SendPropertyChanged("BuyInPrize");
					this.OnBuyInPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyPrize", DbType="Int NOT NULL")]
		public int ReBuyPrize
		{
			get
			{
				return this._ReBuyPrize;
			}
			set
			{
				if ((this._ReBuyPrize != value))
				{
					this.OnReBuyPrizeChanging(value);
					this.SendPropertyChanging();
					this._ReBuyPrize = value;
					this.SendPropertyChanged("ReBuyPrize");
					this.OnReBuyPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnPrize", DbType="Int NOT NULL")]
		public int AddOnPrize
		{
			get
			{
				return this._AddOnPrize;
			}
			set
			{
				if ((this._AddOnPrize != value))
				{
					this.OnAddOnPrizeChanging(value);
					this.SendPropertyChanging();
					this._AddOnPrize = value;
					this.SendPropertyChanged("AddOnPrize");
					this.OnAddOnPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyInStack", DbType="Int NOT NULL")]
		public int BuyInStack
		{
			get
			{
				return this._BuyInStack;
			}
			set
			{
				if ((this._BuyInStack != value))
				{
					this.OnBuyInStackChanging(value);
					this.SendPropertyChanging();
					this._BuyInStack = value;
					this.SendPropertyChanged("BuyInStack");
					this.OnBuyInStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyStack", DbType="Int NOT NULL")]
		public int ReBuyStack
		{
			get
			{
				return this._ReBuyStack;
			}
			set
			{
				if ((this._ReBuyStack != value))
				{
					this.OnReBuyStackChanging(value);
					this.SendPropertyChanging();
					this._ReBuyStack = value;
					this.SendPropertyChanged("ReBuyStack");
					this.OnReBuyStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnStack", DbType="Int NOT NULL")]
		public int AddOnStack
		{
			get
			{
				return this._AddOnStack;
			}
			set
			{
				if ((this._AddOnStack != value))
				{
					this.OnAddOnStackChanging(value);
					this.SendPropertyChanging();
					this._AddOnStack = value;
					this.SendPropertyChanged("AddOnStack");
					this.OnAddOnStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusStack", DbType="Int NOT NULL")]
		public int BonusStack
		{
			get
			{
				return this._BonusStack;
			}
			set
			{
				if ((this._BonusStack != value))
				{
					this.OnBonusStackChanging(value);
					this.SendPropertyChanging();
					this._BonusStack = value;
					this.SendPropertyChanged("BonusStack");
					this.OnBonusStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameType", DbType="Char(1) NOT NULL")]
		public char GameType
		{
			get
			{
				return this._GameType;
			}
			set
			{
				if ((this._GameType != value))
				{
					this.OnGameTypeChanging(value);
					this.SendPropertyChanging();
					this._GameType = value;
					this.SendPropertyChanged("GameType");
					this.OnGameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLeague", DbType="Bit NOT NULL")]
		public bool IsLeague
		{
			get
			{
				return this._IsLeague;
			}
			set
			{
				if ((this._IsLeague != value))
				{
					this.OnIsLeagueChanging(value);
					this.SendPropertyChanging();
					this._IsLeague = value;
					this.SendPropertyChanged("IsLeague");
					this.OnIsLeagueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFullPointed", DbType="Bit NOT NULL")]
		public bool IsFullPointed
		{
			get
			{
				return this._IsFullPointed;
			}
			set
			{
				if ((this._IsFullPointed != value))
				{
					this.OnIsFullPointedChanging(value);
					this.SendPropertyChanging();
					this._IsFullPointed = value;
					this.SendPropertyChanged("IsFullPointed");
					this.OnIsFullPointedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartHour", DbType="Int NOT NULL")]
		public int StartHour
		{
			get
			{
				return this._StartHour;
			}
			set
			{
				if ((this._StartHour != value))
				{
					this.OnStartHourChanging(value);
					this.SendPropertyChanging();
					this._StartHour = value;
					this.SendPropertyChanged("StartHour");
					this.OnStartHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TransactionId;
		
		private System.Guid _UserId;
		
		private System.Guid _CratedByUserId;
		
		private double _Amount;
		
		private int _TransactionType;
		
		private System.Nullable<System.DateTime> _DateAddedToDB;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<System.DateTime> _DateUsed;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DatePayed;
		
		private System.Nullable<int> _CratedByApplication;
		
		private System.Nullable<double> _Amount2;
		
		private System.Nullable<System.Guid> _AttachedTransactionId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIdChanging(System.Guid value);
    partial void OnTransactionIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCratedByUserIdChanging(System.Guid value);
    partial void OnCratedByUserIdChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnTransactionTypeChanging(int value);
    partial void OnTransactionTypeChanged();
    partial void OnDateAddedToDBChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedToDBChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDateUsedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUsedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDatePayedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePayedChanged();
    partial void OnCratedByApplicationChanging(System.Nullable<int> value);
    partial void OnCratedByApplicationChanged();
    partial void OnAmount2Changing(System.Nullable<double> value);
    partial void OnAmount2Changed();
    partial void OnAttachedTransactionIdChanging(System.Nullable<System.Guid> value);
    partial void OnAttachedTransactionIdChanged();
    #endregion
		
		public Transaction()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CratedByUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CratedByUserId
		{
			get
			{
				return this._CratedByUserId;
			}
			set
			{
				if ((this._CratedByUserId != value))
				{
					this.OnCratedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CratedByUserId = value;
					this.SendPropertyChanged("CratedByUserId");
					this.OnCratedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="Int NOT NULL")]
		public int TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAddedToDB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAddedToDB
		{
			get
			{
				return this._DateAddedToDB;
			}
			set
			{
				if ((this._DateAddedToDB != value))
				{
					this.OnDateAddedToDBChanging(value);
					this.SendPropertyChanging();
					this._DateAddedToDB = value;
					this.SendPropertyChanged("DateAddedToDB");
					this.OnDateAddedToDBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUsed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUsed
		{
			get
			{
				return this._DateUsed;
			}
			set
			{
				if ((this._DateUsed != value))
				{
					this.OnDateUsedChanging(value);
					this.SendPropertyChanging();
					this._DateUsed = value;
					this.SendPropertyChanged("DateUsed");
					this.OnDateUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePayed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePayed
		{
			get
			{
				return this._DatePayed;
			}
			set
			{
				if ((this._DatePayed != value))
				{
					this.OnDatePayedChanging(value);
					this.SendPropertyChanging();
					this._DatePayed = value;
					this.SendPropertyChanged("DatePayed");
					this.OnDatePayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CratedByApplication", DbType="Int")]
		public System.Nullable<int> CratedByApplication
		{
			get
			{
				return this._CratedByApplication;
			}
			set
			{
				if ((this._CratedByApplication != value))
				{
					this.OnCratedByApplicationChanging(value);
					this.SendPropertyChanging();
					this._CratedByApplication = value;
					this.SendPropertyChanged("CratedByApplication");
					this.OnCratedByApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount2", DbType="Float")]
		public System.Nullable<double> Amount2
		{
			get
			{
				return this._Amount2;
			}
			set
			{
				if ((this._Amount2 != value))
				{
					this.OnAmount2Changing(value);
					this.SendPropertyChanging();
					this._Amount2 = value;
					this.SendPropertyChanged("Amount2");
					this.OnAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedTransactionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AttachedTransactionId
		{
			get
			{
				return this._AttachedTransactionId;
			}
			set
			{
				if ((this._AttachedTransactionId != value))
				{
					this.OnAttachedTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._AttachedTransactionId = value;
					this.SendPropertyChanged("AttachedTransactionId");
					this.OnAttachedTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoles")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserRoleId;
		
		private System.Guid _UserId;
		
		private bool _IsMasterAdmin;
		
		private bool _CanOpenBarCalendar;
		
		private bool _CanOpenPokerCalendar;
		
		private bool _CanOpenWebSettings;
		
		private bool _CanAddTournament;
		
		private bool _CanDeleteTournament;
		
		private bool _CanEditTournament;
		
		private bool _CanEditPastTournament;
		
		private bool _CanOpenUsers;
		
		private bool _CanEditUsers;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRoleIdChanging(System.Guid value);
    partial void OnUserRoleIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIsMasterAdminChanging(bool value);
    partial void OnIsMasterAdminChanged();
    partial void OnCanOpenBarCalendarChanging(bool value);
    partial void OnCanOpenBarCalendarChanged();
    partial void OnCanOpenPokerCalendarChanging(bool value);
    partial void OnCanOpenPokerCalendarChanged();
    partial void OnCanOpenWebSettingsChanging(bool value);
    partial void OnCanOpenWebSettingsChanged();
    partial void OnCanAddTournamentChanging(bool value);
    partial void OnCanAddTournamentChanged();
    partial void OnCanDeleteTournamentChanging(bool value);
    partial void OnCanDeleteTournamentChanged();
    partial void OnCanEditTournamentChanging(bool value);
    partial void OnCanEditTournamentChanged();
    partial void OnCanEditPastTournamentChanging(bool value);
    partial void OnCanEditPastTournamentChanged();
    partial void OnCanOpenUsersChanging(bool value);
    partial void OnCanOpenUsersChanged();
    partial void OnCanEditUsersChanging(bool value);
    partial void OnCanEditUsersChanged();
    #endregion
		
		public UserRole()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserRoleId
		{
			get
			{
				return this._UserRoleId;
			}
			set
			{
				if ((this._UserRoleId != value))
				{
					this.OnUserRoleIdChanging(value);
					this.SendPropertyChanging();
					this._UserRoleId = value;
					this.SendPropertyChanged("UserRoleId");
					this.OnUserRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMasterAdmin", DbType="Bit NOT NULL")]
		public bool IsMasterAdmin
		{
			get
			{
				return this._IsMasterAdmin;
			}
			set
			{
				if ((this._IsMasterAdmin != value))
				{
					this.OnIsMasterAdminChanging(value);
					this.SendPropertyChanging();
					this._IsMasterAdmin = value;
					this.SendPropertyChanged("IsMasterAdmin");
					this.OnIsMasterAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanOpenBarCalendar", DbType="Bit NOT NULL")]
		public bool CanOpenBarCalendar
		{
			get
			{
				return this._CanOpenBarCalendar;
			}
			set
			{
				if ((this._CanOpenBarCalendar != value))
				{
					this.OnCanOpenBarCalendarChanging(value);
					this.SendPropertyChanging();
					this._CanOpenBarCalendar = value;
					this.SendPropertyChanged("CanOpenBarCalendar");
					this.OnCanOpenBarCalendarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanOpenPokerCalendar", DbType="Bit NOT NULL")]
		public bool CanOpenPokerCalendar
		{
			get
			{
				return this._CanOpenPokerCalendar;
			}
			set
			{
				if ((this._CanOpenPokerCalendar != value))
				{
					this.OnCanOpenPokerCalendarChanging(value);
					this.SendPropertyChanging();
					this._CanOpenPokerCalendar = value;
					this.SendPropertyChanged("CanOpenPokerCalendar");
					this.OnCanOpenPokerCalendarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanOpenWebSettings", DbType="Bit NOT NULL")]
		public bool CanOpenWebSettings
		{
			get
			{
				return this._CanOpenWebSettings;
			}
			set
			{
				if ((this._CanOpenWebSettings != value))
				{
					this.OnCanOpenWebSettingsChanging(value);
					this.SendPropertyChanging();
					this._CanOpenWebSettings = value;
					this.SendPropertyChanged("CanOpenWebSettings");
					this.OnCanOpenWebSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddTournament", DbType="Bit NOT NULL")]
		public bool CanAddTournament
		{
			get
			{
				return this._CanAddTournament;
			}
			set
			{
				if ((this._CanAddTournament != value))
				{
					this.OnCanAddTournamentChanging(value);
					this.SendPropertyChanging();
					this._CanAddTournament = value;
					this.SendPropertyChanged("CanAddTournament");
					this.OnCanAddTournamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDeleteTournament", DbType="Bit NOT NULL")]
		public bool CanDeleteTournament
		{
			get
			{
				return this._CanDeleteTournament;
			}
			set
			{
				if ((this._CanDeleteTournament != value))
				{
					this.OnCanDeleteTournamentChanging(value);
					this.SendPropertyChanging();
					this._CanDeleteTournament = value;
					this.SendPropertyChanged("CanDeleteTournament");
					this.OnCanDeleteTournamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEditTournament", DbType="Bit NOT NULL")]
		public bool CanEditTournament
		{
			get
			{
				return this._CanEditTournament;
			}
			set
			{
				if ((this._CanEditTournament != value))
				{
					this.OnCanEditTournamentChanging(value);
					this.SendPropertyChanging();
					this._CanEditTournament = value;
					this.SendPropertyChanged("CanEditTournament");
					this.OnCanEditTournamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEditPastTournament", DbType="Bit NOT NULL")]
		public bool CanEditPastTournament
		{
			get
			{
				return this._CanEditPastTournament;
			}
			set
			{
				if ((this._CanEditPastTournament != value))
				{
					this.OnCanEditPastTournamentChanging(value);
					this.SendPropertyChanging();
					this._CanEditPastTournament = value;
					this.SendPropertyChanged("CanEditPastTournament");
					this.OnCanEditPastTournamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanOpenUsers", DbType="Bit NOT NULL")]
		public bool CanOpenUsers
		{
			get
			{
				return this._CanOpenUsers;
			}
			set
			{
				if ((this._CanOpenUsers != value))
				{
					this.OnCanOpenUsersChanging(value);
					this.SendPropertyChanging();
					this._CanOpenUsers = value;
					this.SendPropertyChanged("CanOpenUsers");
					this.OnCanOpenUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEditUsers", DbType="Bit NOT NULL")]
		public bool CanEditUsers
		{
			get
			{
				return this._CanEditUsers;
			}
			set
			{
				if ((this._CanEditUsers != value))
				{
					this.OnCanEditUsersChanging(value);
					this.SendPropertyChanging();
					this._CanEditUsers = value;
					this.SendPropertyChanged("CanEditUsers");
					this.OnCanEditUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _NickName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PeronalId;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _Comment;
		
		private string _Password;
		
		private bool _IsSms;
		
		private bool _IsMail;
		
		private bool _IsAdmin;
		
		private bool _IsBlocked;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private bool _IsPersonal;
		
		private System.Nullable<bool> _IsAutoReturn;
		
		private int _AdminLevel;
		
		private System.Nullable<bool> _IsVisibleForServiceUsers;
		
		private System.Nullable<bool> _IsWallet;
		
		private System.Data.Linq.Binary _Avatar;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<UserRole> _UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPeronalIdChanging(string value);
    partial void OnPeronalIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsSmsChanging(bool value);
    partial void OnIsSmsChanged();
    partial void OnIsMailChanging(bool value);
    partial void OnIsMailChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnIsBlockedChanging(bool value);
    partial void OnIsBlockedChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnIsPersonalChanging(bool value);
    partial void OnIsPersonalChanged();
    partial void OnIsAutoReturnChanging(System.Nullable<bool> value);
    partial void OnIsAutoReturnChanged();
    partial void OnAdminLevelChanging(int value);
    partial void OnAdminLevelChanged();
    partial void OnIsVisibleForServiceUsersChanging(System.Nullable<bool> value);
    partial void OnIsVisibleForServiceUsersChanged();
    partial void OnIsWalletChanging(System.Nullable<bool> value);
    partial void OnIsWalletChanged();
    partial void OnAvatarChanging(System.Data.Linq.Binary value);
    partial void OnAvatarChanged();
    #endregion
		
		public User()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeronalId", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PeronalId
		{
			get
			{
				return this._PeronalId;
			}
			set
			{
				if ((this._PeronalId != value))
				{
					this.OnPeronalIdChanging(value);
					this.SendPropertyChanging();
					this._PeronalId = value;
					this.SendPropertyChanged("PeronalId");
					this.OnPeronalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSms", DbType="Bit NOT NULL")]
		public bool IsSms
		{
			get
			{
				return this._IsSms;
			}
			set
			{
				if ((this._IsSms != value))
				{
					this.OnIsSmsChanging(value);
					this.SendPropertyChanging();
					this._IsSms = value;
					this.SendPropertyChanged("IsSms");
					this.OnIsSmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMail", DbType="Bit NOT NULL")]
		public bool IsMail
		{
			get
			{
				return this._IsMail;
			}
			set
			{
				if ((this._IsMail != value))
				{
					this.OnIsMailChanging(value);
					this.SendPropertyChanging();
					this._IsMail = value;
					this.SendPropertyChanged("IsMail");
					this.OnIsMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit NOT NULL")]
		public bool IsBlocked
		{
			get
			{
				return this._IsBlocked;
			}
			set
			{
				if ((this._IsBlocked != value))
				{
					this.OnIsBlockedChanging(value);
					this.SendPropertyChanging();
					this._IsBlocked = value;
					this.SendPropertyChanged("IsBlocked");
					this.OnIsBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPersonal", DbType="Bit NOT NULL")]
		public bool IsPersonal
		{
			get
			{
				return this._IsPersonal;
			}
			set
			{
				if ((this._IsPersonal != value))
				{
					this.OnIsPersonalChanging(value);
					this.SendPropertyChanging();
					this._IsPersonal = value;
					this.SendPropertyChanged("IsPersonal");
					this.OnIsPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAutoReturn", DbType="Bit")]
		public System.Nullable<bool> IsAutoReturn
		{
			get
			{
				return this._IsAutoReturn;
			}
			set
			{
				if ((this._IsAutoReturn != value))
				{
					this.OnIsAutoReturnChanging(value);
					this.SendPropertyChanging();
					this._IsAutoReturn = value;
					this.SendPropertyChanged("IsAutoReturn");
					this.OnIsAutoReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminLevel", DbType="Int NOT NULL")]
		public int AdminLevel
		{
			get
			{
				return this._AdminLevel;
			}
			set
			{
				if ((this._AdminLevel != value))
				{
					this.OnAdminLevelChanging(value);
					this.SendPropertyChanging();
					this._AdminLevel = value;
					this.SendPropertyChanged("AdminLevel");
					this.OnAdminLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisibleForServiceUsers", DbType="Bit")]
		public System.Nullable<bool> IsVisibleForServiceUsers
		{
			get
			{
				return this._IsVisibleForServiceUsers;
			}
			set
			{
				if ((this._IsVisibleForServiceUsers != value))
				{
					this.OnIsVisibleForServiceUsersChanging(value);
					this.SendPropertyChanging();
					this._IsVisibleForServiceUsers = value;
					this.SendPropertyChanged("IsVisibleForServiceUsers");
					this.OnIsVisibleForServiceUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWallet", DbType="Bit")]
		public System.Nullable<bool> IsWallet
		{
			get
			{
				return this._IsWallet;
			}
			set
			{
				if ((this._IsWallet != value))
				{
					this.OnIsWalletChanging(value);
					this.SendPropertyChanging();
					this._IsWallet = value;
					this.SendPropertyChanged("IsWallet");
					this.OnIsWalletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction", Storage="_Transactions", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSettings")]
	public partial class UserSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SettingId;
		
		private System.Nullable<System.DateTime> _LeagueTableUpdateDateTime;
		
		private System.Nullable<System.DateTime> _CashTableUpdateDateTime;
		
		private System.Nullable<System.DateTime> _ApcLeagueUpdateDateTime;
		
		private System.Nullable<System.DateTime> _ApcCashUpdateDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingIdChanging(System.Guid value);
    partial void OnSettingIdChanged();
    partial void OnLeagueTableUpdateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeagueTableUpdateDateTimeChanged();
    partial void OnCashTableUpdateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCashTableUpdateDateTimeChanged();
    partial void OnApcLeagueUpdateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApcLeagueUpdateDateTimeChanged();
    partial void OnApcCashUpdateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApcCashUpdateDateTimeChanged();
    #endregion
		
		public UserSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SettingId
		{
			get
			{
				return this._SettingId;
			}
			set
			{
				if ((this._SettingId != value))
				{
					this.OnSettingIdChanging(value);
					this.SendPropertyChanging();
					this._SettingId = value;
					this.SendPropertyChanged("SettingId");
					this.OnSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueTableUpdateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LeagueTableUpdateDateTime
		{
			get
			{
				return this._LeagueTableUpdateDateTime;
			}
			set
			{
				if ((this._LeagueTableUpdateDateTime != value))
				{
					this.OnLeagueTableUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LeagueTableUpdateDateTime = value;
					this.SendPropertyChanged("LeagueTableUpdateDateTime");
					this.OnLeagueTableUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTableUpdateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CashTableUpdateDateTime
		{
			get
			{
				return this._CashTableUpdateDateTime;
			}
			set
			{
				if ((this._CashTableUpdateDateTime != value))
				{
					this.OnCashTableUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CashTableUpdateDateTime = value;
					this.SendPropertyChanged("CashTableUpdateDateTime");
					this.OnCashTableUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApcLeagueUpdateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApcLeagueUpdateDateTime
		{
			get
			{
				return this._ApcLeagueUpdateDateTime;
			}
			set
			{
				if ((this._ApcLeagueUpdateDateTime != value))
				{
					this.OnApcLeagueUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ApcLeagueUpdateDateTime = value;
					this.SendPropertyChanged("ApcLeagueUpdateDateTime");
					this.OnApcLeagueUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApcCashUpdateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApcCashUpdateDateTime
		{
			get
			{
				return this._ApcCashUpdateDateTime;
			}
			set
			{
				if ((this._ApcCashUpdateDateTime != value))
				{
					this.OnApcCashUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ApcCashUpdateDateTime = value;
					this.SendPropertyChanged("ApcCashUpdateDateTime");
					this.OnApcCashUpdateDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
